from aiogram import Bot
from aiogram.enums import ParseMode, parse_mode
from aiogram.types import CallbackQuery

from config import chat_id, main_link, support_bot
from core.handlers.basic import get_start
from core.keyboards.basic import BackKeyboard, MainKeyboard, HelpKeyboard
from core.utils.basic import count_weight, get_link
from core.utils.channel import num_of_valid_refs, is_in_channel
from core.utils.database import DbRequest


async def callback_handler(call: CallbackQuery, bot: Bot, request: DbRequest):
    if call.data == 'rules':
        await call.message.edit_text('–ü—Ä–∏–≤–µ—Ç! –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è —á–µ—Ä–µ–∑ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å.'
                                     ' –û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥—Ä—É–∑—å—è–º'
                                     ' ‚Äì —á–µ–º –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è, —Ç–µ–º –±–æ–ª—å—à–µ —Ç—ã –∑–∞—Ä–∞–±–æ—Ç–∞–µ—à—å.'
                                     ' –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è.'
                                     ' –í—ã–ø–æ–ª–Ω—è–π –∑–∞–¥–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ, –≤–æ–∑–º–æ–∂–Ω–æ, –±—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –ø–æ–∑–∂–µ.'
                                     ' –ë–æ–ª—å—à–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π ‚Äì –±–æ–ª—å—à–µ —Ç–≤–æ–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫.'
                                     ' –ú—ã –¥–µ–ª–∏–º –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–µ–Ω—å–≥–∏ –º–µ–∂–¥—É –≤—Å–µ–º–∏ –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:'
                                     ' —á–µ–º –±–æ–ª—å—à–µ —Ç—ã —É—á–∞—Å—Ç–≤—É–µ—à—å, —Ç–µ–º –±–æ–ª—å—à–µ —Ç–≤–æ–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫!'
                                     ' –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω—è–π –∑–∞–¥–∞–Ω–∏—è —á–µ—Å—Ç–Ω–æ'
                                     ' ‚Äì –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ.'
                                     ' –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∂–∏—Å—å —Å –Ω–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —á–µ—Ä–µ–∑ –±–æ—Ç–∞. '
                                     '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∏ –Ω–∞—á–∏–Ω–∞–π –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å –Ω–∞–º–∏ –ª–µ–≥–∫–æ –∏ –ø—Ä–æ—Å—Ç–æ!',
                                     reply_markup=BackKeyboard)
    if call.data == 'help':
        await call.message.edit_text(f'–ú–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ [—Å—é–¥–∞]({support_bot})', reply_markup=BackKeyboard,
                                     parse_mode=ParseMode.MARKDOWN_V2)
    if call.data == 'earn':
        weight = await count_weight(bot, call.message.chat.id, request)
        total_weight, money_pool = request.get_pool_info()
        await call.message.edit_text(f'*–¢–≤–æ–π –≤–∫–ª–∞–¥*: {weight} –∏–∑ {total_weight}\n'
                                     f'*–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ*: {weight / total_weight * money_pool if total_weight > 0 else 0}\n'
                                     f'–ù–∞—Å—Ç–æ—è—â–∏–π –¥–æ—Ö–æ–¥ –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –∫–∞–∫ –±–æ–ª—å—à–µ —Ç–∞–∫ –∏ –º–µ–Ω—å—à–µ.\n'
                                     f'–í–∫–ª–∞–¥ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ:\n`1 + 0,2 \* –∫–æ–ª-–≤–æ –ø—Ä–∏—à–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π`.\n'
                                     f'–ü–æ–∑–∂–µ —Ñ–æ—Ä–º—É–ª–∞ –±—É–¥–µ—Ç –º–µ–Ω—è—Ç—å—Å—è.'.replace('.','\.'),
                                     reply_markup=BackKeyboard,
                                     parse_mode=ParseMode.MARKDOWN_V2)
    if call.data == 'refs':
        refs = request.get_refs(call.message.chat.id)
        active = await num_of_valid_refs(bot, refs)
        link = await get_link(bot, call.from_user.id, request)
        await call.message.edit_text(f'–í–æ—Ç —Ç–≤–æ—è —Å—Å—ã–ª–∫–∞: `{link}`\n'
                                     f"–ê–∫—Ç–∏–≤–Ω—ã—Ö –¥—Ä—É–∑–µ–π: {active}\n"
                                     f"–ü–æ–∫–∏–Ω—É–ª–æ –∫–∞–Ω–∞–ª: {len(refs) - active} {'üò¢' if len(refs)-active > 0 else 'üòå'}",
                                     parse_mode = ParseMode.MARKDOWN_V2,
                                     reply_markup=BackKeyboard)
    if call.data == 'wallet':
        # print(call.message.chat.id)
        await call.message.edit_text(f'–ù–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ: {request.get_balance(call.message.chat.id)}', reply_markup=BackKeyboard)
    if call.data == 'main':
        info = request.get_by_id(call.from_user.id)
        if len(info) > 0 or await is_in_channel(bot, call.from_user.id, chat_id):
            link = await get_link(bot, call.from_user.id, request)
            text = (f'–ü—Ä–∏–≤–µ—Ç,\n'
                    f'–í–æ—Ç —Ç–≤–æ—è —Å—Å—ã–ª–∫–∞: `{link}`')
            await call.message.edit_text(text, parse_mode=ParseMode.MARKDOWN_V2, reply_markup=MainKeyboard)
        else:
            text = (f'–ü—Ä–∏–≤–µ—Ç,\n'
                    f'–î–ª—è –Ω–∞—á–∞–ªa –≤—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ [–∫–∞–Ω–∞–ª—É]({main_link})')
            await call.message.edit_text(text, parse_mode=ParseMode.MARKDOWN_V2)
    if call.data == 'tech_prob':
        pass
    if call.data == 'collab':
        pass
    if call.data == 'complaint':
        pass

    await call.answer()
